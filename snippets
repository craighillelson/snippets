'.source.python':
  'create list':
    'prefix': 'lst'
    'body': 'lst = []'

  'import csv':
    'prefix': 'import_csv'
    'body': 'import csv'

  'import random':
    'prefix': 'import_random'
    'body': 'import random'

  'namedtuple':
    'prefix': 'namedtuple'
    'body': 'from collections import namedtuple'

  'create dictionary':
    'prefix': 'dct'
    'body': 'dct = {}'

  'create for loop':
    'prefix': 'for_loop'
    'body': 'for x in lst:'

  'test list membership':
    'prefix': 'if_in'
    'body': 'if x in:'

  'loop through items in dictionary':
    'prefix': 'for_k_v'
    'body': 'for k, v in dct.items():'

  'merge dictionaries':
    'prefix': 'merge_dictionaries'
    'body': 'dct3 = {**dct1, **dct2}'

  'get differences between two dictionaries':
    'prefix': 'get_diff_set'
    'body': 'DIFF = set(DCT1.items()) ^ set(DCT2.items())'

  'sort dictinary by keys':
    'prefix': 'sort_dct_keys'
    'body': 'for k, v in sorted(dct.items()):\n
      \   print(k, v)'

  'find values in two sets that intersect':
    'prefix': 'intersection'
    'body': '''
    set1 = {"apples", "oranges", "bananas"} # fruits as placeholder values
    set2 = {'bananas', 'tangerines', 'lemons'}\n
    intersection_set = set2.intersection(set1)'''

  'return lambda':
    'prefix': 'return'
    'body': 'RTN = lambda: '

  'from datetime import date':
    'prefix': 'from_datetime'
    'body': 'from datetime import date'

  'get today':
    'prefix': 'today'
    'body': 'today = date.today()'

  'open csv':
    'prefix': 'open_csv'
    'body': 'def open_csv(file, dct):\n
        \   """ open csv and populate a dictionary with its contents """\n
        \   with open(file) as csv_file:\n
            \       f_csv = csv.reader(csv_file)\n
            \       column_headings = next(f_csv)\n
            \       csv_row = namedtuple(\'Row\', column_headings)\n
            \       for rows in f_csv:\n
                \           row = csv_row(*rows)\n
                \           dct[row.term] = row.definition\n'

  'switch function':
    'prefix': 'switch_function'
    'body': 'def switch_case(argument):\n
        \   """ switch case statement """\n
        \   switcher = {\n
        \       "a": "option_1",\n
        \       "b": "option_2",\n
        \       "c": "option_3",\n
        \       }\n
        \   return switcher.get(argument, "nothing")\n'

  'write to csv':
    'prefix': 'write_to_csv_function'
    'body': 'def write_to_csv(name_of_file, dct):\n
        \   """ write dictionary to csv """\n
        \   with open(name_of_file, "w") as out_file:\n
            \       out_csv = csv.writer(out_file)\n
            \       out_csv.writerow(HEADERS) # define HEADERS before running function\n
            \       for k, v in dct.items():\n
                \           keys_values = (k, v)\n
                \           out_csv.writerow(keys_values)'

  'print list':
    'prefix': 'print_lst'
    'body': 'for item in lst:\n
    \   print(item)'

  'write to text file':
    'prefix': 'write_to_txt'
    'body': 'FILE = open("file.txt", "w")\nfor item in lst:\n
    \   FILE.write(item)'

  'generate list of random numbers':
    'prefix': 'list_of_random_numbers'
    'body': '''
    import random\n
    random_numbers_lst = random.sample(range(1, 100), 3)'''
